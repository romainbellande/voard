rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedInOrPublic() {
      return request.auth.uid != null || resource.data.visibility == 'public';
    }

    function isOwner() {
      return request.auth.uid == resource.data.userId;
    }

    function isAllowed(permission) {
      return request.auth.uid != null && permission in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }

    match /roles/{role} {
      allow get: if isAllowed('documents.roles.get');
      allow list: if isAllowed('documents.roles.list');
      allow update: if isAllowed('documents.roles.update');
      allow create: if isAllowed('documents.roles.create');
      allow delete: if isAllowed('documents.roles.delete');
    }

    match /users/{user} {
      allow get: if isAllowed('documents.users.get');
      allow list: if isAllowed('documents.users.list');
      allow update: if isAllowed('documents.users.update');
      allow create: if isAllowed('documents.users.create');
      allow delete: if isAllowed('documents.users.delete');
    }
  }
}
